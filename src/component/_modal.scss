/*=================================================

Micromodal.jsを使ったモーダルscss



↓モーダルトリガー

button.c-btn.js-openModal

↓モーダル本体

div#modal-1[aria-hidden="true"]>div[tabindex="-1"][data-micromodal-close]>div[role="dialog"][aria-modal="true"][aria-labelledby="modal-1-title"][aria-describedby="modal-1-content"]>div[role="document"]>(header>h3#modal-1-title{Modal Title}+button[aria-label="Close modal"][aria-controls="modal-1"][data-micromodal-close])+(main#modal-1-content{Modal Content})

==================================================*/

/**************************\
  Basic Modal Styles
\**************************/

.modal {
	font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir,
		helvetica neue, helvetica, ubuntu, roboto, noto, segoe ui, arial, sans-serif;
}

.modal__overlay {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background: rgba(0, 0, 0, 0.6);
	display: flex;
	justify-content: center;
	align-items: center;
}

.modal__container {
	background-color: #fff;
	padding: 30px;
	max-width: 500px;
	max-height: 100vh;
	border-radius: 4px;
	overflow-y: auto;
	box-sizing: border-box;
}

.modal__header {
	display: flex;
	justify-content: space-between;
	align-items: center;
}

.modal__title {
	margin-top: 0;
	margin-bottom: 0;
	font-weight: 600;
	font-size: 1.25rem;
	line-height: 1.25;
	color: #00449e;
	box-sizing: border-box;
}

.modal__close {
	background: transparent;
	border: 0;
}

.modal__header .modal__close:before {
	content: '\2715';
}

.modal__content {
	margin-top: 2rem;
	margin-bottom: 2rem;
	line-height: 1.5;
	color: rgba(0, 0, 0, 0.8);
}

.modal__btn {
	font-size: 0.875rem;
	padding-left: 1rem;
	padding-right: 1rem;
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
	background-color: #e6e6e6;
	color: rgba(0, 0, 0, 0.8);
	border-radius: 0.25rem;
	border-style: none;
	border-width: 0;
	cursor: pointer;
	-webkit-appearance: button;
	text-transform: none;
	overflow: visible;
	line-height: 1.15;
	margin: 0;
	will-change: transform;
	-moz-osx-font-smoothing: grayscale;
	-webkit-backface-visibility: hidden;
	backface-visibility: hidden;
	-webkit-transform: translateZ(0);
	transform: translateZ(0);
	transition: -webkit-transform 0.25s ease-out;
	transition: transform 0.25s ease-out;
	transition: transform 0.25s ease-out, -webkit-transform 0.25s ease-out;
}

.modal__btn:focus,
.modal__btn:hover {
	-webkit-transform: scale(1.05);
	transform: scale(1.05);
}

.modal__btn-primary {
	background-color: #00449e;
	color: #fff;
}

/**************************\
  Demo Animation Style
\**************************/
@keyframes mmfadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes mmfadeOut {
	from {
		opacity: 1;
	}
	to {
		opacity: 0;
	}
}

@keyframes mmslideIn {
	from {
		transform: translateY(15%);
	}
	to {
		transform: translateY(0);
	}
}

@keyframes mmslideOut {
	from {
		transform: translateY(0);
	}
	to {
		transform: translateY(-10%);
	}
}

.micromodal-slide {
	display: none;
}

.micromodal-slide.is-open {
	display: block;
}

.micromodal-slide[aria-hidden='false'] .modal__overlay {
	animation: mmfadeIn 0.3s cubic-bezier(0, 0, 0.2, 1);
}

.micromodal-slide[aria-hidden='false'] .modal__container {
	animation: mmslideIn 0.3s cubic-bezier(0, 0, 0.2, 1);
}

.micromodal-slide[aria-hidden='true'] .modal__overlay {
	animation: mmfadeOut 0.3s cubic-bezier(0, 0, 0.2, 1);
}

.micromodal-slide[aria-hidden='true'] .modal__container {
	animation: mmslideOut 0.3s cubic-bezier(0, 0, 0.2, 1);
}

.micromodal-slide .modal__container,
.micromodal-slide .modal__overlay {
	will-change: transform;
}

/*=================================================

↓モーダルトリガー

button.c-btn.js-openModal

↓モーダル本体

div.c-modalWrapper.js-modalWrap.[aria-expanded="false"]>div.c-modalOverlay.js-modalOverlay+div.c-modal.c-modalBox-content>(button.c-closeBtn.js-closeModal.[aria-controls="modalBox"][aria-expanded="false"]>span*3)+div

==================================================*/

$modalColor: #eeeeee;

html {
	overflow-y: scroll;
}

html.modalOpen {
	overflow: hidden;
}

.c-modalWrapper {
	position: fixed;
	top: 0%;
	left: 0%;
	z-index: 1000;
	width: 100%;
	height: 100vh;
	// pointer-events: none;
	.c-modalOverlay {
		position: fixed;
		z-index: -1;
		top: 0;
		right: 0;
		width: 100%;
		height: 100vh;
		background-color: rgba(0, 0, 0, 0.55);
	}
	.c-modal {
		background-color: $modalColor;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -60%);
		position: absolute;
		width: 80%;
		padding: 1rem 2rem;
		height: 80%;
		//navのリストがあふれたときよう
		overflow: auto;
		/*スクロールバーの幅*/
		&::-webkit-scrollbar {
			width: 6px;
		}
		/*スクロールバーのレール*/
		&::-webkit-scrollbar-track {
			border-radius: 30px;
			background: #eee;
		}
		/*スクロールバーのつまみ*/
		&::-webkit-scrollbar-thumb {
			border-radius: 30px;
			// background: #81d4fa;
			background: #999;
		}
		ul {
			li {
				pointer-events: auto;
			}
		}
	}
	&[aria-expanded] {
		//aria-expanded属性が付与されている場合（falseかtrueかは関係ない）
		transition-property: visibility;
		transition-duration: 0.2s;
		.c-modalOverlay {
			transition-property: opacity;
			transition-duration: 0.25s;
			transition-timing-function: linear;
		}
		.c-modal {
			transition-property: transform, overflow-y;
			transition-duration: 0.25s;
			transition-timing-function: ease;
		}
		.c-modalBox-content {
			> * {
				transition-property: opacity;
				transition-duration: 0.25s;
				transition-timing-function: linear;
			}
		}
	}
	&[aria-expanded='true'] {
		//aria-expanded属性が付与され、かつその値がtrue（画面上に表示されている）の時
		visibility: visible;
		.c-modalOverlay {
			opacity: 1;
		}
		.c-modal {
			// overflow-y: scroll;
			transform: translate(-50%, -50%);
		}
		.c-modalBox-content {
			> * {
				opacity: 1;
			}
		}
	}
	&[aria-expanded='false'] {
		//aria-expanded属性が付与され、かつその値がfalse（画面上に表示されていない）の時
		visibility: hidden;
		.c-modalOverlay {
			opacity: 0;
		}
		.c-modal {
			// overflow-y: hidden;
			transform: translate(-50%, -60%);
		}
		.c-modalBox-content {
			> * {
				opacity: 0;
			}
		}
	}
}

//以上が標準、以下オプション
